name: Release Images

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push_tgbot:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase owner
        id: repo
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Build & push Telegram Bot image
        run: |
          REPO=ghcr.io/${{ steps.repo.outputs.owner_lc }}/labubu-tgbot
          docker build -f ./telegram_bot/Dockerfile -t $REPO:latest -t $REPO:${{ github.run_number }} .
          docker push $REPO:latest
          docker push $REPO:${{ github.run_number }}

  build-and-push_rag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase owner
        id: repo
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Build & push rag image
        run: |
          REPO=ghcr.io/${{ steps.repo.outputs.owner_lc }}/labubu-rag
          docker build -f ./rag/Dockerfile -t $REPO:latest -t $REPO:${{ github.run_number }} .
          docker push $REPO:latest
          docker push $REPO:${{ github.run_number }}

  build-and-push_moderation_nlp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase owner
        id: repo
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Build & push moderation_nlp image
        run: |
          REPO=ghcr.io/${{ steps.repo.outputs.owner_lc }}/labubu-moderation_nlp
          docker build -f ./moderation_nlp/Dockerfile -t $REPO:latest -t $REPO:${{ github.run_number }} .
          docker push $REPO:latest
          docker push $REPO:${{ github.run_number }}

  build-and-push_moderation_regex:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase owner
        id: repo
        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Build & push moderation_regex image
        run: |
          REPO=ghcr.io/${{ steps.repo.outputs.owner_lc }}/labubu-moderation_regex
          docker build -f ./moderation_regex/Dockerfile -t $REPO:latest -t $REPO:${{ github.run_number }} .
          docker push $REPO:latest
          docker push $REPO:${{ github.run_number }}
      

#  build-and-push_llm-agent:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: docker/setup-buildx-action@v3
#      - uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Lowercase owner
#        id: repo
#        run: echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT
#
#      - name: Build & push LLM Agent
#        run: |
#          REPO=ghcr.io/${{ steps.repo.outputs.owner_lc }}/llm_agent
#          docker build -f ./llm_agent/Dockerfile -t $REPO:latest -t $REPO:${{ github.run_number }} .
#          docker push $REPO:latest
#          docker push $REPO:${{ github.run_number }}
